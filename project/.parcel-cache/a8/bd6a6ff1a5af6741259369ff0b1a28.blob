var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _ViewJs = require('./View.js');
var _ViewJsDefault = _parcelHelpers.interopDefault(_ViewJs);
var _urlImgIconsSvg = require('url:../../img/icons.svg');
var _urlImgIconsSvgDefault = _parcelHelpers.interopDefault(_urlImgIconsSvg);
function _defineProperty(obj, key, value) {
  if ((key in obj)) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
// parcel 2
class PaginationView extends _ViewJsDefault.default {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_parentElement", document.querySelector('.pagination'));
  }
  addHandlerClick(handler) {
    this._parentElement.addEventListener('click', function (e) {
      const btn = e.target.closest('.btn--inline');
    });
  }
  _generateMarkup() {
    const curPage = this._data.page;
    const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);
    console.log(numPages);
    // page 1, and there are other pages
    if (curPage === 1 && numPages) {
      return this._renderButton(curPage + 1, 'right', 'next');
    }
    // last page
    if (curPage === numPages && numPages > 1) {
      return this._renderButton(curPage - 1, 'left', 'prev');
    }
    // other page (between 1 and the last page)
    if (curPage < numPages) {
      return this._renderButton(curPage - 1, 'left', 'prev') + this._renderButton(curPage + 1, 'right', 'next');
    }
    // page 1 and there are no other pages
    return '';
  }
  _renderButton(curPage, direction, arrow) {
    return `
        <button class="btn--inline pagination__btn--${arrow}">
            <svg class="search__icon">
                <use href="${_urlImgIconsSvgDefault.default}#icon-arrow-${direction}"></use>
            </svg>
            <span>Page ${curPage}</span>
        </button>
    `;
  }
}
exports.default = new PaginationView();
